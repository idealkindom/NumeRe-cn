Added	"clear -var" can now be used from the terminal or a script to clear the current list of variables (with exception of default variables).
Added	"getfilelist()" and "getfolderlist()" may now follow shell links (*.LNK files).
Added	A function "getuilang()" for accessing the user's current language
Added	A simple lexer for INI files was added.
Added	Added feature of autowrapping for comments if line indicator is active.
Added	Added functions to perform circular and row/column-wise shifts of all elements in a matrix.
Added	Added option to execute a script from the current or a given line.
Added	Added probability density functions for all available random number distributions.
Added	Additional handler for interacting with custom windows were added: changing focus, selections, maximize, iconize, restore, hide and unhide.
Added	Folding has been enabled for LaTeX files.
Added	It is now possible to pass plotting options to "hist" and "hist2d" directly. Due to name conflicts, we had to rename the previously "grid" option to "asgrid".
Added	It is now possible to use custom window layouts as custom dialogs with "window WINID -get dialogresult"
Added	It is possible to directly access the first and last character of a string
Added	It's now possible to define the file type of the loaded or saved file if that is different from the standard file extension.
Added	It's now possible to create a QR code from a string using the "qrcode" command.
Added	It's now possible to create a TeX export from the documentation articles by appending a "-tex" to the "help" command (internal development feature).
Added	Layout commands have been added: "lamp" and "datetimepicker"
Added	New table methods for insertion of cells ("TAB().insertXYZ()"), removing of cells ("TAB().removeXYZ()") and removing unnecessary trailing cells and columns ("TAB().shrink") have been added.
Added	New table methods for reordering rows and columns "TAB().reorderXYZ()" have been added.
Added	Random distribution functions for the Weibull distributions were added.
Added	String functions to compare the first and last characters of a string to a substring: "startswith()" and "endswith()"
Added	The function "getfilediff()" can be used to calculate the unified diff of two files.
Added	The functions "to_utf8()" and "to_ansi()" can be used to convert to and from UTF-8 encoded strings.
Added	The GUI element state "readonly" was added, which is identical to "disabled" for most elements with exception of "tablegrid" and "textentry".
Added	The plot option margin=MARGIN can be used to control the plot margin size.
Added	The table method "TAB().convert()" may now autodetect the column type if the second argument is set to "auto" or omitted.
Added	The table method "TAB().fndcols()" may now support regular expressions.
Added	The table viewer will now group common table header rows together, creating a virtual hierarchy and grid lines can be hidden.
Added	The terminal now also proposes global variables for auto completion.
Added	Using "statustext", one can now modify the statusbar of window layouts.
Added	Whole new apps can now be created using the new file dialog and selecting one of the available app templates.
Applied	Date-time columns are now automatically wide enough for their contents.
Applied	It's now possible to pipe a window layout encoded as string directly into the "window" command.
Applied	Other text files can now be embedded in packages.
Applied	The relative scaling of GUI elements may now be set with "relscl=FACTOR".
Applied	The revision of large files won't be created by calculating a DIFF. Instead, the whole file content is saved.
Cleaned	"audioread" and "seek" read audiodata as "value.f32" (without complex value support)
Cleaned	"hist" will now use categories or logical values to determine the bins, however this only works, if all columns share their type and their category definitions. Otherwise abstract categories are defined.
Cleaned	"imread" reads images as "value.ui8" data.
Cleaned	"move" and "copy" can now create the target folders, if necessary.
Cleaned	"url" now has a progress bar for larger files and accepts now longer transmissions.
Cleaned	A "treelist" can now display data using a tree-like layout.
Cleaned	If the debugger is active, the usual stop button now also works as expected and aborts the whole process.
Cleaned	Improved the behavior of the table viewer: long strings are now wrapped around and the autosizing feature now informs about longer runtimes.
Cleaned	Improved the internal interface of "stats". If the result is stored to a target table, the first column will now contain the stats names.
Cleaned	Improved the rendering speed of the terminal (relevant for larger strings, which required a bunch of virtual line breaks).
Cleaned	Physical constants are now named after their english names, german names still exist internally for backwards compatibility.
Cleaned	The autocompletion feature does not interfere with any of the editor tooltips any more.
Cleaned	The context menu of the table viewer now also contains the possibility to change the column type.
Cleaned	The editor and the terminal will now only provide method autocompletion with methods fitting to the variable type.
Cleaned	The string arrays of "dropdown" and "combobox" can now be changed using the "window ID -set label=VALS item=ID" command.
Cleaned	Units of loaded JCAMP-DX files are now written in English
Fixed	A rare crash in "matop" mode was resolved, which occured, if one uses a non-filled part of a table for an expression.
Fixed	Conditional expressions in "if" and "while", which return multiple values, have now all return values being considered (implictly using "and()").
Fixed	Curve sets can now be plotted without the need of an additional legend entry.
Fixed	Data expressions may now be used within table methods.
Fixed	Drawing functions can now be combined into function definitions (e.g. for predefined combinations) and used within "draw" and "draw3d" as expected.
Fixed	Face() and Facev() functions can be made transparent
Fixed	Cells containing custom date-time formats in Excel are now detected and converted correctly.
Fixed	If the table name is now longer than 31 characters, an automatic sheet name will be used in XLS exports.
Fixed	In rare circumstances, locally installed packages could trigger an exception, if one wants to install something from the package repository. That has been resolved.
Fixed	Indices are now better checked.
Fixed	NumeRe does not crash anymore after the print preview of the documentation browser has been closed.
Fixed	NumeRe will now restore its window, if it is iconized and one double-clicks on any linked file to have the editor scaled correctly.
Fixed	Plot marks now also scale with their corresponding line sizes.
Fixed	Resolved a problem with creating new files.
Fixed	Resolved a small problem with the plot legends in combination with "region".
Fixed	Table methods are now evaluated correctly within loops.
Fixed	The autoconversion of tables does not prefer logical over value columns any more (rather the other way around).
Fixed	The data dimensions in multiplot layouts are now calculated correctly.
Fixed	The inability to close the application after a previous close was aborted was resolved.
Fixed	The static code analyzer will now detect more missing semicolons.
Fixed	The Table.convert() function has been enhanced to interpret various number formats, accommodating both EU and US decimal separators, as well as space, EU, and US-based thousand separators.
Fixed	Tokenizer function now parses strings with embedded commas correctly when reading CSV Files.
Fixed	Using "str.len" in the search bar yielded an uncatched exception message. This was resolved.
New	A 64 bit version is now available. Using a newer compiler, it is also faster so switching is encouraged.
New	Conditional breakpoints were added as EXPERIMENTAL feature. To create one, create regular breakpoint and then right-click on it and select "Edit breakpoint".
New	It's now possible to use relative namespaces with additional tilde characters: "$this~~relative~namespace~..."
New	The new flow control command "leave" allows jumping out of nested loops completely without the need of unnecessary complex "if-else" checks and boolean flags.
New	We added an experimental support for using the column headlines as table indices.
New	You can now select the fundamental data type of a value column (some files are setting that automatically). Beware that only two data types support complex values: "value" (i.e. "value.cf64") and "value.cf32".
Removed	The obsolete second parameter for the elliptic integral D was removed. The function now has the signature "ellipticD(x,k)"
Updated	Language files and documentation articles may now be encoded using UTF-8. They're converted to CP1252 internally.
Updated	The commands "hist" and "hist2d" were greatly improved and provide new features.
Updated	The search bars of the file and the symbol's trees have been updated and improved.
Updated	The XLSX file import was improved and is much faster now.
